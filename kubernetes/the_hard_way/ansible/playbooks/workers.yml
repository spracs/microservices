---
- name: Provisioning a Kubernetes Worker Node
  hosts: gcp_ansible_worker
  become: true
  tasks:
  - name: Creating config dirs
    file:
      path: /etc/cni/net.d
      state: directory
  - file:
      path: /opt/cni/bin
      state: directory
  - file:
      path: /var/lib/kubelet
      state: directory
  - file:
      path: /var/lib/kube-proxy
      state: directory
  - file:
      path: /var/lib/kubernetes
      state: directory
  - file:
      path: /var/run/kubernetes
      state: directory

  - name: Install dependencies
    apt: "name={{ item }} state=present update_cache=yes"
    with_items:
      - socat
      - conntrack
      - ipset

  - name: Download and Install Worker Binaries
    unarchive:
      src: https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.18.0/crictl-v1.18.0-linux-amd64.tar.gz
      dest: /usr/local/bin/
      remote_src: yes
      mode: +x
  - get_url:
      url: https://github.com/opencontainers/runc/releases/download/v1.0.0-rc91/runc.amd64
      dest: /usr/local/bin/runc
      mode: +x
  - unarchive:
      src: https://github.com/containernetworking/plugins/releases/download/v0.8.6/cni-plugins-linux-amd64-v0.8.6.tgz
      remote_src: yes
      dest: /opt/cni/bin/
  - file:
      path: /tmp/containerd
      state: directory
  - unarchive:
      src: https://github.com/containerd/containerd/releases/download/v1.3.6/containerd-1.3.6-linux-amd64.tar.gz
      remote_src: yes
      dest: /tmp/containerd/
  - copy:
      src: /tmp/containerd/bin/
      dest: /bin/
      remote_src: yes
  - get_url:
      url: https://storage.googleapis.com/kubernetes-release/release/v1.18.6/bin/linux/amd64/kubectl
      dest: /usr/local/bin/kubectl
      mode: +x
  - get_url:
      url: https://storage.googleapis.com/kubernetes-release/release/v1.18.6/bin/linux/amd64/kube-proxy
      dest: /usr/local/bin/kube-proxy
      mode: +x
  - get_url:
      url: https://storage.googleapis.com/kubernetes-release/release/v1.18.6/bin/linux/amd64/kubelet
      dest: /usr/local/bin/kubelet
      mode: +x

  - name: Add ansible fact cidr_worker
    command: >-
      curl -s -H "Metadata-Flavor: Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/pod-cidr
    register: command_output_full
  - set_fact: cidr_worker={{ command_output_full.stdout }}
  - debug: var=cidr_worker

  - name: Configure CNI Networking
    template:
      src: ../templates/10-bridge.conf.j2
      dest: /etc/cni/net.d/10-bridge.conf
  - template:
      src: ../templates/99-loopback.conf.j2
      dest: /etc/cni/net.d/99-loopback.conf

  - name: Configure containerd
    file:
      path: /etc/containerd
      state: directory
  - template:
      src: ../templates/config.toml.j2
      dest: /etc/containerd/config.toml
  - template:
      src: ../templates/containerd.service.j2
      dest: /etc/systemd/system/containerd.service
    notify: reload containerd
  - systemd: name=containerd enabled=yes


  - name: Configure the Kubelet
    copy:
      src: ../files/workers/{{ ansible_hostname }}-key.pem
      dest: /var/lib/kubelet/
  - copy:
      src: ../files/workers/{{ ansible_hostname }}.pem
      dest: /var/lib/kubelet/
  - copy:
      src: ../files/workers/{{ ansible_hostname }}.kubeconfig
      dest: /var/lib/kubelet/kubeconfig
  - copy:
      src: ../files/workers/ca.pem
      dest: /var/lib/kubernetes/
  - template:
      src: ../templates/kubelet-config.yaml.j2
      dest: /var/lib/kubelet/kubelet-config.yaml
  - template:
      src: ../templates/kubelet.service.j2
      dest: /etc/systemd/system/kubelet.service
    notify: reload kubelet
  - systemd: name=kubelet enabled=yes

  - name: Configure the Kubernetes Proxy
    copy:
      src: ../files/workers/kube-proxy.kubeconfig
      dest: /var/lib/kube-proxy/kubeconfig
  - template:
      src: ../templates/kube-proxy-config.yaml.j2
      dest: /var/lib/kube-proxy/kube-proxy-config.yaml
  - template:
      src: ../templates/kube-proxy.service.j2
      dest: /etc/systemd/system/kube-proxy.service
    notify: reload kube-proxy
  - systemd: name=kube-proxy enabled=yes


  handlers:
  - name: reload containerd
    systemd: name=containerd state=restarted daemon_reload=yes
  - name: reload kubelet
    systemd: name=kubelet state=restarted daemon_reload=yes
  - name: reload kube-proxy
    systemd: name=kube-proxy state=restarted daemon_reload=yes
